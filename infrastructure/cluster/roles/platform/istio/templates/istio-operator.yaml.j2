apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio-control-plane
spec:
  profile: {{ istio_profile }}
  tag: {{ istio_version }}
  hub: docker.io/istio
  
  meshConfig:
    accessLogFile: /dev/stdout
    defaultConfig:
      holdApplicationUntilProxyStarts: true
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*circuit_breakers.*"
        - ".*upstream_rq_retry.*"
        - ".*upstream_rq_pending.*"
        - ".*upstream_downstream.*" 
        - ".*downstream_rq_retry.*"
        - ".*_rq_timeout.*"
        - ".*osconfig.*"
        - ".*outlier_detection.*"
{% if platform_type == 'eks' %}
      gatewayTopology:
        numTrustedProxies: 2
{% endif %}
    defaultProviders:
      metrics:
      - prometheus
    extensionProviders:
    - name: prometheus
      prometheus:
        service: prometheus-server.monitoring.svc.cluster.local
        port: 9090
    - name: zipkin
      zipkin:
        service: zipkin.istio-system.svc.cluster.local
        port: 9411
    
  components:
    base:
      enabled: true
    pilot:
      enabled: true
      k8s:
        resources:
          requests:
            cpu: {{ istio_pilot_cpu_request }}
            memory: {{ istio_pilot_memory_request }}
          limits:
            cpu: {{ istio_pilot_cpu_limit }}
            memory: {{ istio_pilot_memory_limit }}
        hpaSpec:
          minReplicas: 1
          maxReplicas: 3
        env:
        - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
          value: "true"
        - name: PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY  
          value: "true"
{% if platform_type == 'k3s' %}
        - name: PILOT_SKIP_VALIDATE_TRUST_DOMAIN
          value: "true"
{% endif %}
          
    cni:
      enabled: {{ platform_configs[platform_type].cni_enabled }}
{% if platform_configs[platform_type].cni_enabled %}
      namespace: kube-system
      k8s:
        overlays:
        - kind: DaemonSet
          name: istio-cni-node
          patches:
          - path: spec.template.spec.containers[0].env[-1]
            value:
              name: CNI_CONF_NAME
              value: "10-calico.conflist"
{% endif %}

    ingressGateways:
    - name: istio-ingressgateway
      enabled: false  # We'll create our own gateway
      
    egressGateways:
    - name: istio-egressgateway
      enabled: false
      
  values:
    gateways:
      istio-ingressgateway:
        type: {{ istio_gateway_service_type }}
{% if istio_gateway_service_type == 'NodePort' %}
        ports:
        - port: 80
          targetPort: 8080
          name: http2
          nodePort: {{ istio_gateway_http_nodeport }}
        - port: 443
          targetPort: 8443
          name: https
          nodePort: {{ istio_gateway_https_nodeport }}
{% endif %}
    global:
      proxy:
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
      istiod:
        enableAnalysis: true
    telemetry:
      v2:
        enabled: true