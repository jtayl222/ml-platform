---
apiVersion: v1
kind: Service
metadata:
  name: istio-gateway
  namespace: {{ istio_gateway_namespace }}
{% if istio_gateway_service_type == 'LoadBalancer' and (metallb_state | default('absent')) == 'present' %}
  annotations:
    metallb.universe.tf/loadBalancerIPs: "{{ istio_gateway_loadbalancer_ip }}"
{% endif %}
  labels:
    app: istio-gateway
    istio: gateway
spec:
  type: {{ istio_gateway_service_type }}
  selector:
    app: istio-gateway
    istio: gateway
  ports:
  - name: http2
    port: 80
    targetPort: 8080
{% if istio_gateway_service_type == 'NodePort' %}
    nodePort: {{ istio_gateway_http_nodeport }}
{% endif %}
  - name: https
    port: 443
    targetPort: 8443
{% if istio_gateway_service_type == 'NodePort' %}
    nodePort: {{ istio_gateway_https_nodeport }}
{% endif %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-gateway
  namespace: {{ istio_gateway_namespace }}
  labels:
    app: istio-gateway
    istio: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio-gateway
      istio: gateway
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-gateway
        istio: gateway
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-gateway
      containers:
      - name: istio-proxy
        image: docker.io/istio/proxyv2:{{ istio_version }}
        args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --log_output_level=default:info
        env:
        - name: PILOT_AGENT_PROMETHEUS_PORT
          value: "15020"
        - name: ISTIO_META_WORKLOAD_NAME
          value: istio-gateway
        - name: ISTIO_META_OWNER
          value: kubernetes://apis/apps/v1/namespaces/{{ istio_gateway_namespace }}/deployments/istio-gateway
        - name: ISTIO_META_MESH_ID
          value: cluster.local
        - name: TRUST_DOMAIN
          value: cluster.local
        - name: ISTIO_META_UNPRIVILEGED_POD
          value: "true"
        - name: ISTIO_META_DNS_AUTO_ALLOCATE
          value: "true"
        - name: ISTIO_META_DNS_CAPTURE
          value: "true"
        - name: PROXY_CONFIG
          value: |
            {"discoveryAddress":"istiod.{{ istio_namespace }}.svc:15012","tracing":{"zipkin":{"address":"zipkin.{{ istio_namespace }}:9411"}},"proxyStatsMatcher":{"inclusionRegexps":[".*outlier_detection.*",".*circuit_breakers.*",".*upstream_rq_retry.*",".*upstream_rq_pending.*",".*upstream_rq_timeout.*",".*downstream_rq_timeout.*"]}}
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: PROXY_CONFIG_XDS_AGENT
          value: |
            {"streamIdleTimeout":"300s","useDownstreamProtocol":false}
        ports:
        - containerPort: 15020
          name: stats-prom
          protocol: TCP
        - containerPort: 8080
          name: http2
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 15090
          name: envoy-prom
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: {{ istio_gateway_cpu_limit }}
            memory: {{ istio_gateway_memory_limit }}
          requests:
            cpu: {{ istio_gateway_cpu_request }}
            memory: {{ istio_gateway_memory_request }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-gateway
  namespace: {{ istio_gateway_namespace }}
  labels:
    app: istio-gateway
    istio: gateway
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istio-gateway
  namespace: {{ istio_gateway_namespace }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istio-gateway
  namespace: {{ istio_gateway_namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-gateway
subjects:
- kind: ServiceAccount
  name: istio-gateway
  namespace: {{ istio_gateway_namespace }}